{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => {\n    return res.json();\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["/Users/tatananovikova/Desktop/praktikum/react-mesto-auth/src/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","authorize","response","data","localStorage","setItem","token","checkToken"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYN,QADO;AAEnB,eAASD;AAFU,KAAf;AAL2B,GAAvB,CAAL,CAUNQ,IAVM,CAUAC,GAAD,IAAS;AACb,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,GAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMC,SAAS,GAAG,CAACX,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYN,QADO;AAEnB,eAASD;AAFU,KAAf;AAL2B,GAAvB,CAAL,CAUNQ,IAVM,CAUAI,QAAQ,IAAIA,QAAQ,CAACF,IAAT,EAVZ,EAWNF,IAXM,CAWAK,IAAD,IAAU;AACd,QAAIA,IAAJ,EAAS;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,KAAjC;AACA,aAAOH,IAAP;AACD;AACF,GAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMI,UAAU,GAAID,KAAD,IAAW;AACnC,SAAOd,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASY,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAONR,IAPM,CAODC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPN,EAQNF,IARM,CAQDK,IAAI,IAAIA,IARP,CAAP;AASD,CAVM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co'; \n\nexport const register = (email, password) => { \n  return fetch(`${BASE_URL}/signup`, { \n    method: 'POST', \n    headers: { \n      'Content-Type': 'application/json' \n    }, \n    body: JSON.stringify({ \n      \"password\": password, \n      \"email\": email \n    }) \n  })\n  .then((res) => {\n    return res.json();\n  })\n}\n\nexport const authorize = (email, password) => { \n  return fetch(`${BASE_URL}/signin`, { \n    method: 'POST', \n    headers: { \n      'Content-Type': 'application/json' \n    }, \n    body: JSON.stringify({ \n      \"password\": password, \n      \"email\": email\n    }) \n  }) \n  .then((response => response.json())) \n  .then((data) => { \n    if (data){ \n      localStorage.setItem('jwt', data.token); \n      return data; \n    }  \n  })\n}\n \nexport const checkToken = (token) => { \n  return fetch(`${BASE_URL}/users/me`, { \n    method: 'GET', \n    headers: { \n      'Content-Type': 'application/json', \n      'Authorization': `Bearer ${token}`, \n    }\n  }) \n  .then(res => res.json())\n  .then(data => data) \n}; "]},"metadata":{},"sourceType":"module"}