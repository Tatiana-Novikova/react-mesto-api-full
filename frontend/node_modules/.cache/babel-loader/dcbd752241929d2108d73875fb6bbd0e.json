{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction _checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nfunction _makeRequest({\n  endpoint,\n  method,\n  body\n}) {\n  const fetchInit = {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`${this._address}/${this._cohortId}/${endpoint}`, body ? { ...fetchInit,\n    body: JSON.stringify(body)\n  } : fetchInit).then(_checkResponse);\n}\n\nexport const register = () => {\n  return _makeRequest({\n    endpoint: 'signup',\n    method: 'POST'\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  }).then(_checkResponse).then(data => {\n    if (data) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(_checkResponse);\n};","map":{"version":3,"sources":["/Users/tatananovikova/Desktop/praktikum/react-mesto-auth/src/auth.js"],"names":["BASE_URL","_checkResponse","res","ok","json","Promise","reject","status","_makeRequest","endpoint","method","body","fetchInit","headers","fetch","_address","_cohortId","JSON","stringify","then","register","authorize","email","password","data","localStorage","setItem","token","checkToken"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD;;AAED,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAtB,EAAkD;AAChD,QAAMC,SAAS,GAAG;AAChBF,IAAAA,MAAM,EAAEA,MADQ;AAEhBG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFO,GAAlB;AAMA,SAAOC,KAAK,CACT,GAAE,KAAKC,QAAS,IAAG,KAAKC,SAAU,IAAGP,QAAS,EADrC,EAEVE,IAAI,GACF,EAAE,GAAGC,SAAL;AAAgBD,IAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAAtB,GADE,GAGFC,SALQ,CAAL,CAOFO,IAPE,CAOGlB,cAPH,CAAP;AAQD;;AAED,OAAO,MAAMmB,QAAQ,GAAG,MAAM;AAC5B,SAAOZ,YAAY,CAAC;AAClBC,IAAAA,QAAQ,EAAE,QADQ;AAElBC,IAAAA,MAAM,EAAE;AAFU,GAAD,CAAnB;AAID,CALM;AAOP,OAAO,MAAMW,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOT,KAAK,CAAE,GAAEd,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCF,IAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYK,QADO;AAEnB,eAASD;AAFU,KAAf;AAL2B,GAAvB,CAAL,CAUNH,IAVM,CAUDlB,cAVC,EAWNkB,IAXM,CAWAK,IAAD,IAAU;AACd,QAAIA,IAAJ,EAAS;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,KAAjC;AACA,aAAOH,IAAP;AACD;AACF,GAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMI,UAAU,GAAID,KAAD,IAAW;AACnC,SAAOb,KAAK,CAAE,GAAEd,QAAS,WAAb,EAAyB;AACnCU,IAAAA,MAAM,EAAE,KAD2B;AAEnCG,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASc,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAONR,IAPM,CAODlB,cAPC,CAAP;AAQD,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction _checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nfunction _makeRequest({ endpoint, method, body }) {\n  const fetchInit = {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  return fetch (\n    `${this._address}/${this._cohortId}/${endpoint}`,\n    body ? \n      { ...fetchInit, body: JSON.stringify(body) } \n    : \n      fetchInit\n  )\n      .then(_checkResponse)\n}\n\nexport const register = () => {\n  return _makeRequest({\n    endpoint: 'signup', \n    method: 'POST'\n  })\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  })\n  .then(_checkResponse)\n  .then((data) => {\n    if (data){\n      localStorage.setItem('jwt', data.token);\n      return data;\n    } \n  })\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(_checkResponse)\n};"]},"metadata":{},"sourceType":"module"}