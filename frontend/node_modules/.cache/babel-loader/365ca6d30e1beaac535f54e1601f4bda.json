{"ast":null,"code":"import _objectSpread from\"/Users/tatananovikova/Desktop/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/tatananovikova/Desktop/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tatananovikova/Desktop/praktikum/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._handleResponse=function(response){if(response.ok){return response.json();}else{return Promise.reject(response.status);}};this._address=options.address;this._token=options.token;this._cohortId=options.cohortId;}_createClass(Api,[{key:\"_makeRequest\",value:function _makeRequest(_ref){var endpoint=_ref.endpoint,method=_ref.method,body=_ref.body;var fetchInit={method:method,headers:{authorization:this._token,'Content-Type':'application/json'}};return fetch(\"\".concat(this._address,\"/\").concat(this._cohortId,\"/\").concat(endpoint),body?_objectSpread(_objectSpread({},fetchInit),{},{body:JSON.stringify(body)}):fetchInit).then(this._handleResponse);}},{key:\"getUserInfo\",value:function getUserInfo(){return this._makeRequest('users/me','GET');}},{key:\"getInitialCards\",value:function getInitialCards(){return this._makeRequest('cards','GET');}},{key:\"updateUserInfo\",value:function updateUserInfo(userInfo){return this._makeRequest('users/me','PATCH',userInfo);}},{key:\"updateAvatar\",value:function updateAvatar(avatar){return this._makeRequest('users/me/avatar','PATCH',avatar);}},{key:\"addNewCard\",value:function addNewCard(cardData){return this._makeRequest('cards','POST',cardData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardID,isLiked){return this._makeRequest(\"cards/likes/\".concat(cardID),isLiked?'DELETE':'PUT');}},{key:\"deleteCard\",value:function deleteCard(cardID){return this._makeRequest(\"cards/\".concat(cardID),'DELETE');}}]);return Api;}();var api=new Api({address:'https://mesto.nomoreparties.co/v1',token:'c846985c-30b9-4d91-bdf7-4d0b3c99bbf7',cohortId:'cohort-24'});export default api;","map":{"version":3,"sources":["/Users/tatananovikova/Desktop/praktikum/mesto-react/src/utils/api.js"],"names":["Api","options","_handleResponse","response","ok","json","Promise","reject","status","_address","address","_token","token","_cohortId","cohortId","endpoint","method","body","fetchInit","headers","authorization","fetch","JSON","stringify","then","_makeRequest","userInfo","avatar","cardData","cardID","isLiked","api"],"mappings":"8fAAMA,CAAAA,G,yBACJ,aAAYC,OAAZ,CAAqB,gCAMrBC,eANqB,CAMH,SAACC,QAAD,CAAc,CAC9B,GAAIA,QAAQ,CAACC,EAAb,CAAiB,CACf,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACD,CAFD,IAEO,CACL,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeJ,QAAQ,CAACK,MAAxB,CAAP,CACD,CACF,CAZoB,CACnB,KAAKC,QAAL,CAAgBR,OAAO,CAACS,OAAxB,CACA,KAAKC,MAAL,CAAcV,OAAO,CAACW,KAAtB,CACA,KAAKC,SAAL,CAAiBZ,OAAO,CAACa,QAAzB,CACD,C,4CAUD,2BAA0C,IAA1BC,CAAAA,QAA0B,MAA1BA,QAA0B,CAAhBC,MAAgB,MAAhBA,MAAgB,CAARC,IAAQ,MAARA,IAAQ,CACxC,GAAMC,CAAAA,SAAS,CAAG,CAChBF,MAAM,CAAEA,MADQ,CAEhBG,OAAO,CAAE,CACPC,aAAa,CAAE,KAAKT,MADb,CAEP,eAAgB,kBAFT,CAFO,CAAlB,CAOA,MAAOU,CAAAA,KAAK,WACP,KAAKZ,QADE,aACU,KAAKI,SADf,aAC4BE,QAD5B,EAEVE,IAAI,gCAAQC,SAAR,MAAmBD,IAAI,CAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAzB,GAAkDC,SAF5C,CAAL,CAGNM,IAHM,CAIL,KAAKtB,eAJA,CAAP,CAMD,C,2BAED,sBAAe,CACb,MAAO,MAAKuB,YAAL,CAAkB,UAAlB,CAA8B,KAA9B,CAAP,CACD,C,+BAED,0BAAmB,CACjB,MAAO,MAAKA,YAAL,CAAkB,OAAlB,CAA2B,KAA3B,CAAP,CACD,C,8BAED,wBAAgBC,QAAhB,CAA0B,CACxB,MAAO,MAAKD,YAAL,CAAkB,UAAlB,CAA8B,OAA9B,CAAuCC,QAAvC,CAAP,CACD,C,4BAED,sBAAcC,MAAd,CAAsB,CACpB,MAAO,MAAKF,YAAL,CAAkB,iBAAlB,CAAqC,OAArC,CAA8CE,MAA9C,CAAP,CACD,C,0BAED,oBAAYC,QAAZ,CAAsB,CACpB,MAAO,MAAKH,YAAL,CAAkB,OAAlB,CAA2B,MAA3B,CAAmCG,QAAnC,CAAP,CACD,C,oCAED,8BAAsBC,MAAtB,CAA8BC,OAA9B,CAAuC,CACrC,MAAO,MAAKL,YAAL,uBAAiCI,MAAjC,EAA2CC,OAAO,CAAG,QAAH,CAAc,KAAhE,CAAP,CACD,C,0BAED,oBAAYD,MAAZ,CAAoB,CAClB,MAAO,MAAKJ,YAAL,iBAA2BI,MAA3B,EAAqC,QAArC,CAAP,CACD,C,mBAGH,GAAME,CAAAA,GAAG,CAAG,GAAI/B,CAAAA,GAAJ,CAAS,CACnBU,OAAO,CAAE,mCADU,CAEnBE,KAAK,CAAE,sCAFY,CAGnBE,QAAQ,CAAE,WAHS,CAAT,CAAZ,CAMA,cAAeiB,CAAAA,GAAf","sourcesContent":["class Api {\n  constructor(options) {\n    this._address = options.address;\n    this._token = options.token;\n    this._cohortId = options.cohortId;\n  }\n\n  _handleResponse = (response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      return Promise.reject(response.status);\n    }\n  }\n\n  _makeRequest ({ endpoint, method, body }) {\n    const fetchInit = {\n      method: method,  \n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    };\n    return fetch (\n      `${this._address}/${this._cohortId}/${endpoint}`,\n      body ? { ...fetchInit, body: JSON.stringify(body) } : fetchInit)\n    .then (\n      this._handleResponse\n    )\n  }\n\n  getUserInfo () {\n    return this._makeRequest('users/me', 'GET');\n  }\n  \n  getInitialCards () {\n    return this._makeRequest('cards', 'GET');\n  }\n\n  updateUserInfo (userInfo) {\n    return this._makeRequest('users/me', 'PATCH', userInfo);\n  }\n\n  updateAvatar (avatar) {\n    return this._makeRequest('users/me/avatar', 'PATCH', avatar);\n  }\n\n  addNewCard (cardData) {\n    return this._makeRequest('cards', 'POST', cardData);\n  }\n\n  changeLikeCardStatus (cardID, isLiked) {\n    return this._makeRequest(`cards/likes/${cardID}`, isLiked ? 'DELETE' : 'PUT');\n  }\n\n  deleteCard (cardID) {\n    return this._makeRequest(`cards/${cardID}`, 'DELETE');\n  }\n}\n\nconst api = new Api ({\n  address: 'https://mesto.nomoreparties.co/v1',\n  token: 'c846985c-30b9-4d91-bdf7-4d0b3c99bbf7',\n  cohortId: 'cohort-24',\n})\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}