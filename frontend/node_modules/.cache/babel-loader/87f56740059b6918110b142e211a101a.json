{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction _checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nfunction _makeRequest({\n  endpoint,\n  method,\n  body\n}) {\n  return fetch(`${BASE_URL}/${endpoint}`, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  }).then(_checkResponse);\n}\n\nexport const register = (email, password) => {\n  return _makeRequest({\n    endpoint: 'signup',\n    method: 'POST',\n    body: ''\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  }).then(_checkResponse).then(data => {\n    if (data) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(_checkResponse);\n};","map":{"version":3,"sources":["/Users/tatananovikova/Desktop/praktikum/react-mesto-auth/src/auth.js"],"names":["BASE_URL","_checkResponse","res","ok","json","Promise","reject","status","_makeRequest","endpoint","method","body","fetch","headers","JSON","stringify","password","email","then","register","authorize","data","localStorage","setItem","token","checkToken"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAIA,GAAG,CAACC,EAAR,EAAY;AACV,WAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;AACD;;AAED,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAtB,EAAkD;AAEhD,SAAOC,KAAK,CAAE,GAAEZ,QAAS,IAAGS,QAAS,EAAzB,EAA4B;AACtCC,IAAAA,MAAM,EAAEA,MAD8B;AAEtCG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF6B;AAKtCF,IAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYC,QADO;AAEnB,eAASC;AAFU,KAAf;AALgC,GAA5B,CAAL,CAUNC,IAVM,CAUDjB,cAVC,CAAP;AAWD;;AAED,OAAO,MAAMkB,QAAQ,GAAG,CAACF,KAAD,EAAQD,QAAR,KAAqB;AAC3C,SAAOR,YAAY,CAAC;AAClBC,IAAAA,QAAQ,EAAE,QADQ;AAElBC,IAAAA,MAAM,EAAE,MAFU;AAGlBC,IAAAA,IAAI,EAAE;AAHY,GAAD,CAAnB;AAKD,CANM;AAQP,OAAO,MAAMS,SAAS,GAAG,CAACH,KAAD,EAAQD,QAAR,KAAqB;AAC5C,SAAOJ,KAAK,CAAE,GAAEZ,QAAS,SAAb,EAAuB;AACjCU,IAAAA,MAAM,EAAE,MADyB;AAEjCG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCF,IAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAYC,QADO;AAEnB,eAASC;AAFU,KAAf;AAL2B,GAAvB,CAAL,CAUNC,IAVM,CAUDjB,cAVC,EAWNiB,IAXM,CAWAG,IAAD,IAAU;AACd,QAAIA,IAAJ,EAAS;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,IAAI,CAACG,KAAjC;AACA,aAAOH,IAAP;AACD;AACF,GAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMI,UAAU,GAAID,KAAD,IAAW;AACnC,SAAOZ,KAAK,CAAE,GAAEZ,QAAS,WAAb,EAAyB;AACnCU,IAAAA,MAAM,EAAE,KAD2B;AAEnCG,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASW,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAONN,IAPM,CAODjB,cAPC,CAAP;AAQD,CATM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction _checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка ${res.status}`);\n}\n\nfunction _makeRequest({ endpoint, method, body }) {\n  \n  return fetch(`${BASE_URL}/${endpoint}`, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  })\n  .then(_checkResponse)\n}\n\nexport const register = (email, password) => {\n  return _makeRequest({\n    endpoint: 'signup', \n    method: 'POST',\n    body: ''\n  })\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      'password': password,\n      'email': email\n    })\n  })\n  .then(_checkResponse)\n  .then((data) => {\n    if (data){\n      localStorage.setItem('jwt', data.token);\n      return data;\n    } \n  })\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(_checkResponse)\n};"]},"metadata":{},"sourceType":"module"}